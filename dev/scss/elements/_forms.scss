@use "sass:map";
@use "sass:color";
@use "../variables";
@use "../prototypes";

.form-row {
    @include prototypes.flex-row(flex-start, flex-start);
    @extend %width-10;

    .form-input,
    .input {
        @extend %width-6;
    }
}

.form-label {
    @extend %width-3;
    text-align: end;
}

.form-input,
.input {
    @include prototypes.border-radius();
    @extend %shadow-1;
    @extend %margin-horizontal-s;
    @extend %padding-xs;
    @extend %margin-top-xs;
    resize: vertical;

    &[type="checkbox"] {
        -moz-appearance: none;
        -webkit-appearance: none;
        -o-appearance: none;
        width: min-content;
        align-self: center;
        margin-right: auto;
        margin-top: 0px;
        margin-bottom: 0px;
        width: 1em;
        height: 1em;
        transition: transform 0.2s ease-in-out;

        @each $name, $theme in variables.$themes {
            $colours: map.get($theme, "colours");
            $primary: map.get($colours, "primary");

            &.#{$name} {
                @include prototypes.gradient-hover-animation($primary);
            }
        }

        &:checked {
            @each $name, $theme in variables.$themes {
                $text: map.get($theme, "text-colour");

                &.#{$name} {
                    @include prototypes.gradient-hover-animation($text);
                }
            }
        }
    }
}

form,
.form {
    @include prototypes.flex-column(flex-start, center);
    @extend %padding-1;

    div {
        @extend .form-row;

        label {
            @extend .form-label;
        }

        input,
        textarea,
        select {
            @extend .form-input;
        }
    }

    label {
        @extend .form-label;
    }

    input:not([type="submit"]),
    textarea {
        @extend .form-input;
    }
}

textarea {
    @extend .input;
    min-height: 1em + (variables.$xs-offset * 3.75);
    height: 1em + (variables.$xs-offset * 3.75);

    &.all-resize {
        resize: both;
    }

    &.no-resize {
        resize: none;
    }
}

@each $name, $theme in variables.$themes {
    $colours: map.get($theme, "colours");
    $primary: map.get($colours, "primary");
    $secondary: map.get($colours, "secondary");
    $tertiary: map.get($colours, "tertiary");
    $darkened-1: map.get($colours, "darkened-1");
    $darkened-2: map.get($colours, "darkened-2");
    $lightened-1: map.get($colours, "lightened-2");
    $lightened-2: map.get($colours, "lightened-2");
    $shifted-1: map.get($colours, "shifted-1");
    $shifted-2: map.get($colours, "shifted-2");
    $shifted-3: map.get($colours, "shifted-3");
    $inverted: map.get($colours, "inverted");
    $complement: map.get($colours, "complement");
    $text: map.get($theme, "text-colour");

    .#{$name}.form-input,
    input.#{$name},
    .#{$name}.input {
        border: 1px solid $shifted-2;
        color: $text;
        background-color: invert($text);
    }

    textarea.#{$name} {
        @extend .input;
        min-height: 1em + (variables.$xs-offset * 3.75);
        height: 1em + (variables.$xs-offset * 3.75);
    }
}

@media screen and (max-width: variables.$screen-width-m) {
    form,
    .form {
        width: 100% !important;
    }

    .form-row,
    form div,
    .form div {
        @include prototypes.flex-column(space-between, flex-start);

        label {
            text-align: start;
            width: 100% !important;
            margin-left: 0px;
            margin-right: 0px;
        }

        input:not([type="checkbox"]) {
            width: 100% !important;
            margin-left: 0px;
            margin-right: 0px;
        }
    }

    .form-label,
    form label,
    .form label {
        text-align: start;
        width: 100% !important;
        margin-left: 0px;
        margin-right: 0px;
    }

    .form-input:not([type="checkbox"]),
    form input:not([type="checkbox"]),
    .form input:not([type="checkbox"]) {
        width: 100% !important;
        margin-left: 0px;
        margin-right: 0px;
    }
}
