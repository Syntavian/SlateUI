@use "sass:map";
@use "sass:color";
@use "../variables";
@use "../prototypes";

.button,
input[type="submit"] {
    @extend %flex;
    @extend %shadow-3;
    @extend %clickable;
    @include prototypes.border-radius();

    background-color: variables.$alpha;
    min-width: min-content;
    min-height: min-content;
    padding: variables.$s-offset;
    border: none;

    &.disabled {
        color: map.get(map.get(variables.$themes, "light"), "shifted-20");
    }

    &.active:not(.disabled) {
        @extend %shadow-inset-3;

        &:hover:not(.disabled) {
            @extend %shadow-inset-5;
        }
    }

    &:hover:not(.disabled) {
        @extend %shadow-5;

        &:active:not(.disabled) {
            @extend %shadow-inset-3;
        }

        &.active:not(.disabled) {
            @extend %shadow-inset-5;
        }
    }

    &:active:not(.disabled) {
        @extend %shadow-inset-3;
    }
}

@each $name, $theme in variables.$themes {
    $colours: map.get($theme, "colours");
    $primary: map.get($colours, "primary");
    $secondary: map.get($colours, "secondary");
    $tertiary: map.get($colours, "tertiary");
    $darkened-1: map.get($colours, "darkened-1");
    $darkened-2: map.get($colours, "darkened-2");
    $lightened-1: map.get($colours, "lightened-2");
    $lightened-2: map.get($colours, "lightened-2");
    $shifted-1: map.get($colours, "shifted-1");
    $shifted-2: map.get($colours, "shifted-2");
    $shifted-3: map.get($colours, "shifted-3");
    $inverted: map.get($colours, "inverted");
    $complement: map.get($colours, "complement");

    .#{$name}.button,
    input[type="submit"].#{$name} {
        border: none;
        &.disabled {
            color: $shifted-2;
        }
    }
}

.button-round {
    @extend .button;
    border-radius: 2em;
}

@for $i from 1 through 5 {
    .button-round-#{$i} {
        @extend .button;
        border-radius: #{calc($i / 2)}em;
    }
}

.button-expand {
    @extend %flex;

    > * {
        @extend .button;
    }
}

@each $name, $theme in variables.$themes {
    .button-expand,
    .#{$name}.button-expand {
        > * {
            animation: animation-shrink 0.2s ease forwards;

            &.gradient-hover-animation {
                animation: animation-shrink-gradient 0.2s ease forwards;

                &.fill {
                    animation: animation-shrink-gradient 0.2s ease forwards;
                }
            }
        }

        &:hover {
            > * {
                animation: animation-expand 0.2s ease forwards;

                &.gradient-hover-animation {
                    animation: animation-expand-gradient 0.2s ease forwards;

                    &.fill {
                        animation: animation-expand-gradient 0.2s ease forwards;
                    }
                }
            }
        }
    }
}

@keyframes animation-expand {
    0% {
        margin: 0em;
        padding: #{0.5em};
    }
    100% {
        margin: #{-0.5em};
        padding: #{0.5em + 0.5em};
    }
}

@keyframes animation-shrink {
    0% {
        margin: #{-0.5em};
        padding: #{0.5em + 0.5em};
    }
    100% {
        margin: 0em;
        padding: #{0.5em};
    }
}

@keyframes animation-expand-gradient {
    0% {
        margin: 0em;
        padding: #{0.5em};
        background-position: 0% 0%;
    }
    100% {
        margin: #{-0.5em};
        padding: #{0.5em + 0.5em};
        background-position: 100% 100%;
    }
}

@keyframes animation-shrink-gradient {
    0% {
        margin: #{-0.5em};
        padding: #{0.5em + 0.5em};
        background-position: 100% 100%;
    }
    100% {
        margin: 0em;
        padding: #{0.5em};
        background-position: 0% 0%;
    }
}
