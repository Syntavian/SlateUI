@use "sass:map";
@use "sass:color";
@use '../variables';
@use '../prototypes';

.button, input[type='submit'] {
    @extend %flex;
    @extend %shadow-3;
    @extend %clickable;
    @include prototypes.border-radius();

    background-color: variables.$alpha-dark;
    min-width: min-content;
    min-height: min-content;
    padding: 0.5em;

    &.disabled {
        color: map.get(map.get(variables.$themes, "light"), "shifted-20");
    }

    &.active {
        @extend %shadow-inset-3;

        &:hover {
            @extend %shadow-inset-5;
        }
    }

    &:hover:not(.disabled) {
        @extend %shadow-5;

        &:active {
            @extend %shadow-inset-3;
        }

        &.active {
            @extend %shadow-inset-5;
        }
    }

    &:active:not(.disabled) {
        @extend %shadow-inset-3;
    }
}

@each $name, $theme in variables.$themes {
    $primary: map.get($theme, "primary");
    $secondary: map.get($theme, "secondary");
    $tertiary: map.get($theme, "tertiary");
    $darkened-20: map.get($theme, "darkened-20");
    $lightened-20: map.get($theme, "lightened-20");
    $shifted-10: map.get($theme, "shifted-10");
    $shifted-20: map.get($theme, "shifted-20");
    $complement: map.get($theme, "complement");
    $inverted: map.get($theme, "inverted");
    $text: map.get($theme, "text-colour");

    .#{$name}.button {
        &.disabled {
            color: $shifted-20;
        }
    }
}
@for $i from 1 through 3 {
    
    @each $name, $theme in variables.$themes {
        $primary: map.get($theme, "primary");
        $text: map.get($theme, "text-colour");

        .button-round-#{$i}, .#{$name}.button-round-#{$i} {
            @extend .button ;
            border-radius: #{$i / 2 + 1}em;
        }
    
        .button-expand-#{$i}, .#{$name}.button-expand-#{$i} {
            @extend %flex;
            
            > * { 
                animation: animation-shrink-#{$i} 0.2s ease forwards;
    
                &.gradient-hover-animation {
                    animation: animation-shrink-gradient-#{$i} 0.2s ease forwards;
                }
            } 
        
            &:hover {
                > * { 
                    animation: animation-expand-#{$i} 0.2s ease forwards;
    
                    &.gradient-hover-animation {
                        animation: animation-expand-gradient-#{$i} 0.2s ease forwards;
                    }
                } 
            }
        }
    }

    @keyframes animation-expand-#{$i} {
        0%{margin: 0em; padding: #{$i * 0.5em};}
        100%{margin: #{$i * -0.5em}; padding: #{$i * 0.5em + 0.5em};}
    }
    
    @keyframes animation-shrink-#{$i} {
        0%{margin: #{$i * -0.5em}; padding: #{$i * 0.5em + 0.5em};}
        100%{margin: 0em; padding: #{$i * 0.5em};}
    }

    @keyframes animation-expand-gradient-#{$i} {
        0%{margin: 0em; padding: #{$i * 0.5em}; background-position: 0% 0%;}
        100%{margin: #{$i * -0.5em}; padding: #{$i * 0.5em + 0.5em}; background-position: 100% 100%;}
    }
    
    @keyframes animation-shrink-gradient-#{$i} {
        0%{margin: #{$i * -0.5em}; padding: #{$i * 0.5em + 0.5em}; background-position: 100% 100%;}
        100%{margin: 0em; padding: #{$i * 0.5em}; background-position: 0% 0%;}
    }
}
